* 문제
문자 배열 chars를 압축합니다. 

새로 만들어질 문자열을 s라고 가정했을 때,
연속적으로 반복되는 각 문자 그룹에 대해 그룹의 길이가 1이면 해당 문자를 s에 추가하고, 
그렇지 않으면 해당 문자와 해당 그룹 길이를 각각 s에 추가합니다. 

**
문자열 s는 별도로 반환하지 않고 입력 문자 배열 chars에 저장해야 합니다. 
단, 함수의 반환값은 새 문자열의 길이(정수)를 반환합니다.
**

그룹의 길이가 10보다 길면 (2자리 이상이면) 분할하여 저장합니다. 

일정한 추가 공간만 사용하는 알고리즘을 작성해야 합니다.

* 예시
1. 
	입력 : ["a", "a", "b", "b", "c", "c", "c"] 
	변환된 문자열(chars) : ["a", "2", "b", "2", "c", "3"]
	출력 : 6
	설명 : 문자열 그룹은 "aa", "bb", "ccc" 이며, 그룹의 문자와 길이를 뒤에 붙입니다.

2. 
	입력 : ["a"]
	변환된 문자열(chars) : ["a"]
	출력 : 1
	설명 : 문자열 그룹은 "a"이며, 길이가 1이기에 길이를 문자열에 추가하지 않습니다.

3. 
	입력 : ["a", "b", "b", "b", "b", "b", "b", "b", "b", "b", "b", "b", "b"]
	변환된 문자열(chars) : ["a", "b", "1", "2"]
	출력 : 4
	설명 : 문자열 그룹은 "a", "bbbbbbbbbbbb"이며, "a" 그룹의 길이는 1이기에 길이를 문자열에 추가하지 않고,
				"b" 그룹은 12의 길이를 갖고 있기에 "1","2"로 나누어 추가합니다.

4. 
	입력 : ["a", "a", "a", "b", "b", "a", "a"]
	변환된 문자열(chars) : ["a", "3", "b", "2", "a", "2"]
	출력 : 6
	설명 : 문자열 그룹은 "aaa", "bb", "aa" 이며, 그룹의 문자와 길이를 뒤에 붙입니다.

참고: https://leetcode.com/problems/string-compression/description/?envType=study-plan-v2&envId=leetcode-75